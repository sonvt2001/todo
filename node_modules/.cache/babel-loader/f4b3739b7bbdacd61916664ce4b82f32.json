{"ast":null,"code":"import _slicedToArray from\"D:/HCMUE/C\\xF4ng ngh\\u1EC7 Web/WebToDoList-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,createContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var DataContext=/*#__PURE__*/createContext();export var Data=function Data(props){//Data tránh bị mất khi Load lại trang\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];useEffect(function(){var todoStore=JSON.parse(localStorage.getItem('todoStore'));if(todoStore)setTodos(todoStore);},[]);useEffect(function(){localStorage.setItem('todoStore',JSON.stringify(todos));},[todos]);return/*#__PURE__*/_jsx(DataContext.Provider,{value:[todos,setTodos],children:props.children});};","map":{"version":3,"sources":["D:/HCMUE/Công nghệ Web/WebToDoList-main/src/components/Data.js"],"names":["React","useState","useEffect","createContext","DataContext","Data","props","todos","setTodos","todoStore","JSON","parse","localStorage","getItem","setItem","stringify","children"],"mappings":"kIAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAwBC,SAAxB,CAAmCC,aAAnC,KAAuD,OAAvD,C,2CAEA,MAAO,IAAMC,CAAAA,WAAW,cAAGD,aAAa,EAAjC,CAEP,MAAO,IAAOE,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CAC5B;AACA,cAA0BL,QAAQ,CAAC,EAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eAEAN,SAAS,CAAC,UAAK,CACX,GAAMO,CAAAA,SAAS,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlB,CACA,GAAGJ,SAAH,CAAcD,QAAQ,CAACC,SAAD,CAAR,CACjB,CAHQ,CAGP,EAHO,CAAT,CAKAP,SAAS,CAAC,UAAM,CACZU,YAAY,CAACE,OAAb,CAAqB,WAArB,CAAiCJ,IAAI,CAACK,SAAL,CAAeR,KAAf,CAAjC,EACH,CAFQ,CAEP,CAACA,KAAD,CAFO,CAAT,CAIF,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAACA,KAAD,CAAQC,QAAR,CAA7B,UACKF,KAAK,CAACU,QADX,EADF,CAKD,CAlBM","sourcesContent":["import React,{useState, useEffect, createContext} from 'react'\n\nexport const DataContext = createContext();\n\nexport const  Data = (props) => {\n    //Data tránh bị mất khi Load lại trang\n    const [todos, setTodos] = useState([])\n\n    useEffect(() =>{\n        const todoStore = JSON.parse(localStorage.getItem('todoStore'))\n        if(todoStore) setTodos(todoStore)\n    },[])\n    \n    useEffect(() => {\n        localStorage.setItem('todoStore',JSON.stringify(todos))\n    },[todos])\n\n  return (\n    <DataContext.Provider value={[todos, setTodos]}> \n        {props.children}\n    </DataContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}