{"ast":null,"code":"var _jsxFileName = \"D:\\\\HCMUE\\\\C\\xF4ng ngh\\u1EC7 Web\\\\WebToDoList-main\\\\src\\\\components\\\\FormInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useRef, useEffect } from 'react';\nimport { DataContext } from './Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormInput() {\n  _s();\n\n  const [todos, setTodos] = useContext(DataContext);\n  const [todoName, setTodoName] = useState(''); // const [todoTime, setTodoTime] = useState( new Date());\n\n  const todoInput = useRef();\n\n  const addTodo = e => {\n    e.preventDefault();\n    const date = new Date();\n    const hoursValue = date.getHours();\n    const minutesValue = date.getMinutes();\n    const dayValue = date.getDate();\n    const monthValue = date.getMonth() + 1;\n    const yearValue = date.getFullYear();\n    const styleHours = hoursValue >= 12 ? 'PM' : 'AM';\n    const dateValue = hoursValue + \":\" + minutesValue + \" \" + styleHours + \"   \" + dayValue + \"/\" + monthValue + \"/\" + yearValue; // console.log(dateValue) \n\n    setTodos([...todos, {\n      name: todoName,\n      time: dateValue,\n      complete: false\n    }]);\n    setTodoName('');\n    todoInput.current.focus();\n  };\n\n  useEffect(() => {\n    todoInput.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: addTodo,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"todo\",\n      id: \"todo\",\n      ref: todoInput,\n      required: true,\n      placeholder: \"What do you want to do today...\",\n      value: todoName,\n      onChange: e => setTodoName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submitCreate\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormInput, \"p/LkIkWRW/DnbgZCiQPq2ULF7oI=\");\n\n_c = FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["D:/HCMUE/Công nghệ Web/WebToDoList-main/src/components/FormInput.js"],"names":["React","useState","useContext","useRef","useEffect","DataContext","FormInput","todos","setTodos","todoName","setTodoName","todoInput","addTodo","e","preventDefault","date","Date","hoursValue","getHours","minutesValue","getMinutes","dayValue","getDate","monthValue","getMonth","yearValue","getFullYear","styleHours","dateValue","name","time","complete","current","focus","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,MAArC,EAA6CC,SAA7C,QAA6D,OAA7D;AACA,SAAQC,WAAR,QAA0B,QAA1B;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,UAAU,CAACG,WAAD,CAApC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC,CAFkC,CAGlC;;AACA,QAAMU,SAAS,GAAGR,MAAM,EAAxB;;AACA,QAAMS,OAAO,GAAGC,CAAC,IAAG;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,UAAU,GAAGF,IAAI,CAACG,QAAL,EAAnB;AACA,UAAMC,YAAY,GAAGJ,IAAI,CAACK,UAAL,EAArB;AACA,UAAMC,QAAQ,GAAGN,IAAI,CAACO,OAAL,EAAjB;AACA,UAAMC,UAAU,GAAGR,IAAI,CAACS,QAAL,KAAkB,CAArC;AACA,UAAMC,SAAS,GAAGV,IAAI,CAACW,WAAL,EAAlB;AACA,UAAMC,UAAU,GAAGV,UAAU,IAAI,EAAd,GAAmB,IAAnB,GAA0B,IAA7C;AAEA,UAAMW,SAAS,GAAGX,UAAU,GAAG,GAAb,GAAmBE,YAAnB,GAAkC,GAAlC,GAAwCQ,UAAxC,GAAqD,KAArD,GAA6DN,QAA7D,GAAwE,GAAxE,GAA8EE,UAA9E,GAA2F,GAA3F,GAAiGE,SAAnH,CAVkB,CAWlB;;AACAjB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACsB,MAAAA,IAAI,EAAEpB,QAAP;AAAiBqB,MAAAA,IAAI,EAAEF,SAAvB;AAAmCG,MAAAA,QAAQ,EAAE;AAA7C,KAAV,CAAD,CAAR;AACArB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAC,IAAAA,SAAS,CAACqB,OAAV,CAAkBC,KAAlB;AACD,GAfD;;AAgBA7B,EAAAA,SAAS,CAAC,MAAK;AACbO,IAAAA,SAAS,CAACqB,OAAV,CAAkBC,KAAlB;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACE;AAAM,IAAA,YAAY,EAAG,KAArB;AAA2B,IAAA,QAAQ,EAAGrB,OAAtC;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,EAAE,EAAC,MAAlC;AAAyC,MAAA,GAAG,EAAED,SAA9C;AACA,MAAA,QAAQ,MADR;AACS,MAAA,WAAW,EAAC,iCADrB;AACuD,MAAA,KAAK,EAAEF,QAD9D;AAEA,MAAA,QAAQ,EAAGI,CAAC,IAAIH,WAAW,CAACG,CAAC,CAACqB,MAAF,CAASC,KAAV;AAF3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAnCuB7B,S;;KAAAA,S","sourcesContent":["import React, {useState, useContext, useRef, useEffect} from 'react'\nimport {DataContext} from './Data'\n\nexport default function FormInput() {\n  const [todos, setTodos] = useContext(DataContext);\n  const [todoName, setTodoName] = useState('');\n  // const [todoTime, setTodoTime] = useState( new Date());\n  const todoInput = useRef();\n  const addTodo = e =>{\n    e.preventDefault();\n    const date = new Date()\n    const hoursValue = date.getHours()\n    const minutesValue = date.getMinutes()\n    const dayValue = date.getDate()\n    const monthValue = date.getMonth() + 1\n    const yearValue = date.getFullYear()\n    const styleHours = hoursValue >= 12 ? 'PM' : 'AM'\n\n    const dateValue = hoursValue + \":\" + minutesValue + \" \" + styleHours + \"   \" + dayValue + \"/\" + monthValue + \"/\" + yearValue\n    // console.log(dateValue) \n    setTodos([...todos,{name: todoName, time: dateValue , complete: false}])\n    setTodoName('');\n    todoInput.current.focus();\n  }\n  useEffect(() =>{\n    todoInput.current.focus();\n  },[])\n\n  return (\n    <form autoComplete = \"off\" onSubmit ={addTodo}> \n        <input type=\"text\" name=\"todo\" id=\"todo\" ref={todoInput}\n        required placeholder=\"What do you want to do today...\" value={todoName} \n        onChange ={e => setTodoName(e.target.value)}/>\n        \n        <button type=\"submit\" className=\"submitCreate\">Add</button>\n      \n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}