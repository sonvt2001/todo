{"ast":null,"code":"var _jsxFileName = \"D:\\\\HCMUE\\\\C\\xF4ng ngh\\u1EC7 Web\\\\WebToDoList-main\\\\src\\\\components\\\\Listtodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport ListItem from './ListItem';\nimport { DataContext } from './Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Listtodo(todo, id) {\n  _s();\n\n  const [todos, setTodos] = useContext(DataContext);\n\n  const switchComplete = id => {\n    const newTodos = [...todos];\n    newTodos.forEach((todo, index) => {\n      if (index === id) {\n        todo.complete = !todo.complete;\n      }\n    });\n    setTodos(newTodos);\n  };\n\n  const handleEditTodos = (editvalue, id) => {\n    const newTodos = [...todos];\n    newTodos.forEach((todo, index) => {\n      if (index === id) {\n        todo.name = editvalue;\n      }\n    });\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: id,\n    className: todo.complete ? \"active\" : \"\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        todo: todo,\n        id: index,\n        checkComplete: switchComplete,\n        handleEditTodos: handleEditTodos\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Listtodo, \"Mgu8qCF5T44C+ADMeSh1/DoVYo0=\");\n\n_c = Listtodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listtodo\");","map":{"version":3,"sources":["D:/HCMUE/Công nghệ Web/WebToDoList-main/src/components/Listtodo.js"],"names":["React","useContext","ListItem","DataContext","Listtodo","todo","id","todos","setTodos","switchComplete","newTodos","forEach","index","complete","handleEditTodos","editvalue","name","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,WAAR,QAA0B,QAA1B;;AAEA,eAAe,SAASC,QAAT,CAAkBC,IAAlB,EAAuBC,EAAvB,EAA2B;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAACE,WAAD,CAApC;;AAEA,QAAMM,cAAc,GAAGH,EAAE,IAAG;AACxB,UAAMI,QAAQ,GAAG,CAAC,GAAGH,KAAJ,CAAjB;AACAG,IAAAA,QAAQ,CAACC,OAAT,CAAiB,CAACN,IAAD,EAAMO,KAAN,KAAgB;AAC7B,UAAGA,KAAK,KAAKN,EAAb,EAAgB;AACZD,QAAAA,IAAI,CAACQ,QAAL,GAAgB,CAACR,IAAI,CAACQ,QAAtB;AACH;AACJ,KAJD;AAKAL,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACH,GARD;;AAUA,QAAMI,eAAe,GAAG,CAACC,SAAD,EAAYT,EAAZ,KAAkB;AACtC,UAAMI,QAAQ,GAAE,CAAC,GAAGH,KAAJ,CAAhB;AACAG,IAAAA,QAAQ,CAACC,OAAT,CAAiB,CAACN,IAAD,EAAOO,KAAP,KAAe;AAC5B,UAAGA,KAAK,KAAKN,EAAb,EAAgB;AACZD,QAAAA,IAAI,CAACW,IAAL,GAAYD,SAAZ;AACH;AACJ,KAJD;AAKAP,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACH,GARD;;AAUF,sBACE;AAAO,IAAA,OAAO,EAAEJ,EAAhB;AAAoB,IAAA,SAAS,EAAED,IAAI,CAACQ,QAAL,GAAgB,QAAhB,GAA2B,EAA1D;AAAA,2BACI;AAAA,gBAEQN,KAAK,CAACU,GAAN,CAAU,CAACZ,IAAD,EAAOO,KAAP,kBACN,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEP,IAAhB;AAAkC,QAAA,EAAE,EAAEO,KAAtC;AACA,QAAA,aAAa,EAAEH,cADf;AAC+B,QAAA,eAAe,EAAEK;AADhD,SAA2BF,KAA3B;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAnCuBR,Q;;KAAAA,Q","sourcesContent":["import React,{useContext} from 'react'\nimport ListItem from './ListItem'\nimport {DataContext} from './Data'\n\nexport default function Listtodo(todo,id) {\n    const [todos, setTodos] = useContext(DataContext);\n\n    const switchComplete = id =>{\n        const newTodos = [...todos]\n        newTodos.forEach((todo,index) => {\n            if(index === id){\n                todo.complete = !todo.complete\n            }\n        })\n        setTodos(newTodos)\n    }\n    \n    const handleEditTodos = (editvalue, id) =>{\n        const newTodos =[...todos]\n        newTodos.forEach((todo, index)=>{\n            if(index === id){\n                todo.name = editvalue\n            }\n        })\n        setTodos(newTodos)\n    }\n\n  return (\n    <label htmlFor={id} className={todo.complete ? \"active\" : \"\"}>\n        <ul>  \n            {\n                todos.map((todo, index) => (\n                    <ListItem todo={todo} key={index} id={index} \n                    checkComplete={switchComplete} handleEditTodos={handleEditTodos}/>\n                ))\n            }\n        </ul>\n    </label>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}