{"ast":null,"code":"var _jsxFileName = \"D:\\\\HCMUE\\\\C\\xF4ng ngh\\u1EC7 Web\\\\WebToDoList-main\\\\src\\\\components\\\\ListItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListItem({\n  todo,\n  id,\n  checkComplete,\n  handleEditTodos\n}) {\n  _s();\n\n  const [onEdit, setOnEdit] = useState(false);\n  const [editValue, setEditValue] = useState(todo.name);\n\n  const handleOnEdit = () => {\n    setOnEdit(true);\n  };\n\n  const handleSave = id => {\n    setOnEdit(false);\n\n    if (editValue) {\n      handleEditTodos(editValue, id);\n    } else {\n      setEditValue(todo.name);\n    }\n  };\n\n  if (onEdit) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"editValue\",\n        className: \"saveEdit\",\n        value: editValue,\n        name: \"editValue\",\n        onChange: e => setEditValue(e.target.value.toLowerCase())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSave(id),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        className: todo.complete ? \"active\" : \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: id,\n          checked: todo.complete,\n          onChange: () => checkComplete(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), todo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Editbutton\",\n        disabled: todo.complete,\n        onClick: handleOnEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(ListItem, \"lZB8jNT4Pjt+2MldzkqJ8eFVhDA=\");\n\n_c = ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["D:/HCMUE/Công nghệ Web/WebToDoList-main/src/components/ListItem.js"],"names":["React","useState","ListItem","todo","id","checkComplete","handleEditTodos","onEdit","setOnEdit","editValue","setEditValue","name","handleOnEdit","handleSave","e","target","value","toLowerCase","complete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA,IAAD;AAAMC,EAAAA,EAAN;AAASC,EAAAA,aAAT;AAAuBC,EAAAA;AAAvB,CAAlB,EAA2D;AAAA;;AACtE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACE,IAAI,CAACQ,IAAN,CAA1C;;AAEA,QAAMC,YAAY,GAAE,MAAK;AACrBJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAFD;;AAIA,QAAMK,UAAU,GAAGT,EAAE,IAAG;AACpBI,IAAAA,SAAS,CAAC,KAAD,CAAT;;AACA,QAAGC,SAAH,EAAa;AACTH,MAAAA,eAAe,CAACG,SAAD,EAAWL,EAAX,CAAf;AACH,KAFD,MAEK;AACDM,MAAAA,YAAY,CAACP,IAAI,CAACQ,IAAN,CAAZ;AACH;AACJ,GAPD;;AASA,MAAGJ,MAAH,EAAU;AACN,wBACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,WAAtB;AAAkC,QAAA,SAAS,EAAC,UAA5C;AAAuD,QAAA,KAAK,EAAEE,SAA9D;AACA,QAAA,IAAI,EAAC,WADL;AAEA,QAAA,QAAQ,EAAEK,CAAC,IAAIJ,YAAY,CAAEI,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAF;AAF3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,OAAO,EAAE,MAAKJ,UAAU,CAACT,EAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH,GATD,MASK;AACD,wBACI;AAAA,8BACI;AAAO,QAAA,OAAO,EAAEA,EAAhB;AAAoB,QAAA,SAAS,EAAED,IAAI,CAACe,QAAL,GAAgB,QAAhB,GAA2B,EAA1D;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,EAAE,EAAEd,EAA3B;AAA+B,UAAA,OAAO,EAAED,IAAI,CAACe,QAA7C;AACA,UAAA,QAAQ,EAAE,MAAMb,aAAa,CAACD,EAAD;AAD7B;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGKD,IAAI,CAACQ,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,QAAQ,EAAER,IAAI,CAACe,QAA9C;AAAwD,QAAA,OAAO,EAAEN,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;AAEJ;;GAvCuBV,Q;;KAAAA,Q","sourcesContent":["import React, {useState} from 'react'\n\nexport default function ListItem({todo,id,checkComplete,handleEditTodos}) {\n    const [onEdit, setOnEdit] = useState(false)\n    const [editValue, setEditValue] = useState(todo.name)\n\n    const handleOnEdit =() =>{\n        setOnEdit(true)\n    }\n    \n    const handleSave = id =>{\n        setOnEdit(false)\n        if(editValue){\n            handleEditTodos(editValue,id)\n        }else{\n            setEditValue(todo.name)\n        }\n    }\n    \n    if(onEdit){\n        return (\n            <li>\n                <input type=\"text\" id=\"editValue\" className=\"saveEdit\" value={editValue} \n                name=\"editValue\" \n                onChange={e => setEditValue (e.target.value.toLowerCase())}/>\n                <button onClick={()=> handleSave(id)}>Save</button>\n            </li>\n        )\n    }else{\n        return (\n            <li>\n                <label htmlFor={id} className={todo.complete ? \"active\" : \"\"}>\n                    <input type=\"checkbox\" id={id} checked={todo.complete}\n                    onChange={() => checkComplete(id)}/>\n                    {todo.name}\n                </label>\n                <button className=\"Editbutton\" disabled={todo.complete} onClick={handleOnEdit}>Edit</button>\n            </li>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}